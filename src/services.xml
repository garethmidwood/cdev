<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>

        <!-- Defaults - override in app config -->

        <service id="cdev.environment.type" alias="environment.type.example"/>
        <service id="cdev.environment.framework" alias="environment.framework.custom"/>
        <service id="cdev.storage" alias="storage.s3"/>

        <!-- App creation and adding command -->

        <service id="symfony.application"
            class="Symfony\Component\Console\Application">
            <argument key="name">Creode Dev</argument>
            <argument key="version">@package_version@</argument>
            <call method="add">
                <argument type="service" id="cdev.backup_pull_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_configure_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_global_configure_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_update_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_plugin_install_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_plugin_search_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_plugin_update_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_plugin_remove_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_plugin_list_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.db_cleanse_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_cleanup_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_cache_clean_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_site_update_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.site_create_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.storage_s3_setup" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.storage_server_setup" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_nuke_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_setup_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_ssh_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_start_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_status_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_stop_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_db_connect_command" />
            </call>
        </service>



        <!-- Command classes -->

        <service id="cdev.backup_pull_command" class="Creode\Cdev\Command\Backup\PullCommand">
            <argument type="service" id="cdev.config" />
            <argument type="service" id="cdev.storage" />
        </service>

        <service id="cdev.cdev_configure_command" class="Creode\Cdev\Command\Cdev\ConfigureCommand">
            <argument type="service" id="symfony.filesystem" />
            <argument type="service" id="symfony.finder" />
            <argument type="service" id="cdev.system_git" />
            <argument type="service" id="cdev.collections.environment" />
            <argument type="service" id="cdev.collections.framework" />
            <argument type="service" id="cdev.collections.storage" />
        </service>

        <service id="cdev.cdev_global_configure_command" class="Creode\Cdev\Command\Cdev\GlobalConfigureCommand">
            <argument type="service" id="cdev.collections.framework" />
        </service>

        <service id="cdev.cdev_update_command"
            class="Creode\Cdev\Command\Cdev\UpdateCommand">
        </service>

        <service id="cdev.cdev_plugin_install_command" class="Creode\Cdev\Command\Plugin\InstallPluginCommand">
            <argument type="service" id="cdev.system_composer" />
        </service>

        <service id="cdev.cdev_plugin_search_command" class="Creode\Cdev\Command\Plugin\SearchPluginCommand">
            <argument type="service" id="cdev.system_composer" />
        </service>

        <service id="cdev.cdev_plugin_remove_command" class="Creode\Cdev\Command\Plugin\RemovePluginCommand">
            <argument type="service" id="cdev.system_composer" />
        </service>

        <service id="cdev.cdev_plugin_update_command" class="Creode\Cdev\Command\Plugin\UpdatePluginCommand">
            <argument type="service" id="cdev.system_composer" />
        </service>

        <service id="cdev.cdev_plugin_list_command" class="Creode\Cdev\Command\Plugin\ListPluginCommand">
            <argument type="service" id="cdev.system_composer" />
        </service>

        <service id="cdev.db_cleanse_command" class="Creode\Cdev\Command\Backup\Db\CleanseCommand">
            <argument type="service" id="cdev.config" />
            <argument type="service" id="cdev.system_awk" />
            <argument type="service" id="cdev.environment.framework" />
        </service>

        <service id="cdev.env_cleanup_command" class="Creode\Cdev\Command\Env\CleanupEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_nuke_command" class="Creode\Cdev\Command\Env\NukeEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_setup_command" class="Creode\Cdev\Command\Env\SetupEnvCommand">
            <argument type="service" id="cdev.environment.type" />
            <argument type="service" id="cdev.config" />
        </service>

        <service id="cdev.env_ssh_command" class="Creode\Cdev\Command\Env\SshEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_db_connect_command" class="Creode\Cdev\Command\Env\DbConnectEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_start_command" class="Creode\Cdev\Command\Env\StartEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_status_command" class="Creode\Cdev\Command\Env\StatusEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_stop_command" class="Creode\Cdev\Command\Env\StopEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_cache_clean_command" class="Creode\Cdev\Command\Site\CacheCleanSiteCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_site_update_command" class="Creode\Cdev\Command\Site\UpdateSiteCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.site_create_command" class="Creode\Cdev\Command\Site\CreateSiteCommand">
            <argument type="service" id="symfony.filesystem" />
            <argument type="service" id="symfony.finder" />
            <argument type="service" id="cdev.system_git" />
            <argument type="service" id="cdev.collections.framework" />
        </service>

        <service id="cdev.storage_s3_setup"
            class="Creode\Storage\S3\Command\SetupStorageCommand">
        </service>

        <service id="cdev.storage_server_setup"
            class="Creode\Storage\Server\Command\SetupStorageCommand">
        </service>
        



        <!-- Environments -->

        <service id="environment.type.example" class="Creode\Environment\Example\Example">
            <argument type="service" id="cdev.environment.framework" />
            <argument type="service" id="cdev.config" />
        </service>


        <!-- Frameworks -->

        <service id="environment.framework.custom"
            class="Creode\Framework\Custom\Custom">
        </service>


        <!-- Storage -->

        <service id="storage.server" class="Creode\Storage\Server\Server">
            <argument type="service" id="cdev.system_ssh" />
            <argument type="service" id="cdev.config" />
        </service>

        <service id="storage.s3" class="Creode\Storage\S3\S3">
            <argument type="service" id="cdev.config" />
        </service>


        <!-- Entities -->

        <service id="cdev.config"
            class="Creode\Cdev\Config">
            <argument type="service" id="symfony.console_output" />
        </service>



        <!-- System commands -->

        <service id="cdev.system_awk" class="Creode\System\String\Awk">
            <argument type="service" id="symfony.filesystem" />
        </service>

        <service id="cdev.system_composer"
            class="Creode\System\Composer\Composer">
        </service>

        <service id="cdev.system_git"
            class="Creode\System\Git\Git">
        </service>

        <service id="cdev.system_iconv" class="Creode\System\Iconv\Iconv">
            <argument type="service" id="symfony.filesystem" />
        </service>

        <service id="cdev.system_sed"
            class="Creode\System\Sed\Sed">
        </service>

        <service id="cdev.system_ssh" class="Creode\System\Ssh\Ssh">
            <argument type="service" id="cdev.config" />
        </service>


        <!-- Collections -->
        <service id="cdev.collections.environment"
            class="Creode\Collections\EnvironmentCollection">
        </service>

        <service id="cdev.collections.framework"
            class="Creode\Collections\FrameworkCollection">
        </service>

        <service id="cdev.collections.storage"
            class="Creode\Collections\StorageCollection">
        </service>


        <!-- Raw symfony components -->

        <service id="cdev.logger" class="Symfony\Component\Console\Logger\ConsoleLogger">
            <argument type="service" id="symfony.console_output" />
        </service>

        <service id="symfony.console_output"
            class="Symfony\Component\Console\Output\ConsoleOutput">
        </service>

        <service id="symfony.filesystem"
            class="Symfony\Component\Filesystem\Filesystem">
        </service>

        <service id="symfony.finder"
            class="Symfony\Component\Finder\Finder">
        </service>
    </services>
</container>
