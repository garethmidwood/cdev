<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>

        <!-- Defaults - override in app config -->

        <service id="cdev.environment.type" alias="environment.type.docker"/>
        <service id="cdev.environment.framework" alias="environment.framework.drupal7"/>

        <!-- App creation and adding command -->

        <service id="symfony.application"
            class="Symfony\Component\Console\Application">
            <argument key="name">Creode Dev</argument>
            <argument key="version">@package_version@</argument>
            <call method="add">
                <argument type="service" id="cdev.backup_pull_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_configure_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_global_configure_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.cdev_update_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.db_cleanse_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.docker_container_mysql" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.docker_container_php" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.docker_container_mailcatcher" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.docker_container_redis" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.docker_container_drush" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.docker_setup" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_cleanup_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_cache_clean_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_site_update_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.site_create_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.site_startup_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_nuke_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_setup_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_ssh_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_start_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_status_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_stop_command" />
            </call>
            <call method="add">
                <argument type="service" id="cdev.env_db_connect_command" />
            </call>
        </service>



        <!-- Command classes -->

        <service id="cdev.backup_pull_command" class="Creode\Cdev\Command\Backup\PullCommand">
            <argument type="service" id="cdev.config" />
            <argument type="service" id="cdev.system_ssh" />
        </service>

        <service id="cdev.cdev_configure_command" class="Creode\Cdev\Command\Cdev\ConfigureCommand">
            <argument type="service" id="symfony.filesystem" />
            <argument type="service" id="symfony.finder" />
            <argument type="service" id="cdev.system_git" />
            <argument type="service" id="cdev.collections.environment" />
            <argument type="service" id="cdev.collections.framework" />
        </service>

        <service id="cdev.cdev_global_configure_command" class="Creode\Cdev\Command\Cdev\GlobalConfigureCommand">
            <argument type="service" id="cdev.collections.framework" />
        </service>

        <service id="cdev.cdev_update_command"
            class="Creode\Cdev\Command\Cdev\UpdateCommand">
        </service>

        <service id="cdev.db_cleanse_command" class="Creode\Cdev\Command\Backup\Db\CleanseCommand">
            <argument type="service" id="cdev.config" />
            <argument type="service" id="cdev.system_awk" />
            <argument type="service" id="cdev.environment.framework" />
        </service>

        <service id="cdev.env_cleanup_command" class="Creode\Cdev\Command\Env\CleanupEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_nuke_command" class="Creode\Cdev\Command\Env\NukeEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_setup_command" class="Creode\Cdev\Command\Env\SetupEnvCommand">
            <argument type="service" id="cdev.environment.type" />
            <argument type="service" id="cdev.config" />
        </service>

        <service id="cdev.env_ssh_command" class="Creode\Cdev\Command\Env\SshEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_db_connect_command" class="Creode\Cdev\Command\Env\DbConnectEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_start_command" class="Creode\Cdev\Command\Env\StartEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_status_command" class="Creode\Cdev\Command\Env\StatusEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_stop_command" class="Creode\Cdev\Command\Env\StopEnvCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_cache_clean_command" class="Creode\Cdev\Command\Site\CacheCleanSiteCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.env_site_update_command" class="Creode\Cdev\Command\Site\UpdateSiteCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.site_create_command" class="Creode\Cdev\Command\Site\CreateSiteCommand">
            <argument type="service" id="symfony.filesystem" />
            <argument type="service" id="symfony.finder" />
            <argument type="service" id="cdev.system_git" />
            <argument type="service" id="cdev.collections.framework" />
        </service>

        <service id="cdev.site_startup_command" class="Creode\Cdev\Command\Site\StartUpSiteCommand">
            <argument type="service" id="cdev.environment.type" />
        </service>

        <service id="cdev.docker_setup" class="Creode\Environment\Docker\Command\SetupEnvCommand">
            <argument type="service" id="environment.type.docker" />
            <argument type="service" id="cdev.system_composer" />
            <argument type="service" id="symfony.filesystem" />
        </service>

        <service id="cdev.docker_container_mysql" class="Creode\Environment\Docker\Command\Container\Mysql">
            <argument type="service" id="symfony.filesystem" />
        </service>

        <service id="cdev.docker_container_php"
            class="Creode\Environment\Docker\Command\Container\Php">
        </service>

        <service id="cdev.docker_container_mailcatcher"
            class="Creode\Environment\Docker\Command\Container\Mailcatcher">
        </service>

        <service id="cdev.docker_container_redis"
            class="Creode\Environment\Docker\Command\Container\Redis">
        </service>

        <service id="cdev.docker_container_drush"
            class="Creode\Environment\Docker\Command\Container\Drush">
        </service>
        

        <!-- Environments -->

        <service id="environment.type.docker" class="Creode\Environment\Docker\Docker">
            <argument type="service" id="cdev.system_docker" />
            <argument type="service" id="cdev.system_docker_compose" />
            <argument type="service" id="cdev.system_docker_sync" />
            <argument type="service" id="cdev.environment.framework" />
            <argument type="service" id="cdev.config" />
        </service>


        <!-- Frameworks -->

        <service id="environment.framework.magento1"
            class="Creode\Framework\Magento1\Magento1">
        </service>
        <service id="environment.framework.magento2"
            class="Creode\Framework\Magento2\Magento2">
        </service>
        <service id="environment.framework.drupal7"
            class="Creode\Framework\Drupal7\Drupal7">
        </service>
        <service id="environment.framework.drupal8"
            class="Creode\Framework\Drupal8\Drupal8">
        </service>
        <service id="environment.framework.wordpress"
            class="Creode\Framework\WordPress\WordPress">
        </service>
        <service id="environment.framework.laravel"
            class="Creode\Framework\Laravel\Laravel">
	</service>
        <service id="environment.framework.custom"
            class="Creode\Framework\Custom\Custom">
        </service>


        <!-- Entities -->

        <service id="cdev.config"
            class="Creode\Cdev\Config">
            <argument type="service" id="symfony.console_output" />
        </service>



        <!-- System commands -->

        <service id="cdev.system_awk" class="Creode\System\String\Awk">
            <argument type="service" id="symfony.filesystem" />
        </service>

        <service id="cdev.system_composer"
            class="Creode\System\Composer\Composer">
        </service>

        <service id="cdev.system_docker"
            class="Creode\Environment\Docker\System\Docker">
        </service>

        <service id="cdev.system_docker_compose"
            class="Creode\Environment\Docker\System\Compose\Compose">
        </service>

        <service id="cdev.system_docker_sync"
            class="Creode\Environment\Docker\System\Sync\Sync">
        </service>

        <service id="cdev.system_git"
            class="Creode\System\Git\Git">
        </service>

        <service id="cdev.collections.environment"
            class="Creode\Collections\EnvironmentCollection">
        </service>

        <service id="cdev.collections.framework"
            class="Creode\Collections\FrameworkCollection">
        </service>

        <service id="cdev.system_iconv" class="Creode\System\Iconv\Iconv">
            <argument type="service" id="symfony.filesystem" />
        </service>

        <service id="cdev.system_sed"
            class="Creode\System\Sed\Sed">
        </service>

        <service id="cdev.system_ssh" class="Creode\System\Ssh\Ssh">
            <argument type="service" id="cdev.config" />
        </service>


        <!-- Raw symfony components -->

        <service id="cdev.logger" class="Symfony\Component\Console\Logger\ConsoleLogger">
            <argument type="service" id="symfony.console_output" />
        </service>

        <service id="symfony.console_output"
            class="Symfony\Component\Console\Output\ConsoleOutput">
        </service>

        <service id="symfony.filesystem"
            class="Symfony\Component\Filesystem\Filesystem">
        </service>

        <service id="symfony.finder"
            class="Symfony\Component\Finder\Finder">
        </service>
    </services>
</container>
